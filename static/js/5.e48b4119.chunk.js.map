{"version":3,"sources":["pages/LinkPage/index.tsx","components/Links/index.tsx","common/Button/styles.ts","common/Button/index.tsx"],"names":["require","config","Container","lazy","parseInt","process","parseFloat","LinkPage","MiddleBlock","Links","openNewWindow","url","window","open","title","content","align","name","onClick","alert","button","scrollTo","id","StyledButton","styled","p","color","Button","fixedWidth","children"],"mappings":"mIACA,kCAmBAA,EAAQ,KAAUC,SAClB,IAEMC,EAAYC,gBAAK,kBAAM,iCAGsBC,SAASC,mCACFD,SAASC,6CAERC,WAAWD,QAiBvDE,UAdE,WAMf,OACE,cAACL,EAAD,UAEC,cAAC,IAAD,Q,iCCzCL,mCAmBAF,EAAQ,KAAUC,SAClB,IACMO,EAAcL,gBAAK,kBAAM,wDACzBD,EAAYC,gBAAK,kBAAM,iCAGsBC,SAASC,mCACFD,SAASC,6CAERC,WAAWD,QAwCvDI,IApCD,WACZ,IAAMC,EAAgB,SAACC,GAEtBC,OAAOC,KAAKF,EAAK,WAGlB,OACE,cAACT,EAAD,UACA,cAACM,EAAD,CACIM,MAAM,QACNC,QAEE,8BACA,cAAC,IAAD,CAAKC,MAAM,SAAX,SACE,gCACA,cAAC,IAAD,CAAQC,KAAK,WAAYC,QAAS,kBAAQR,EAAc,WAAxD,2BAEI,cAAC,IAAD,CAAQO,KAAK,cAAcC,QAAS,kBAAOC,MAAM,iBAAjD,qBAEA,cAAC,IAAD,CAAQF,KAAK,cAAcC,QAAS,kBAAOR,EAAc,qCAAzD,qBAEA,cAAC,IAAD,CAAQO,KAAK,gBAAiBC,QAAS,kBAAOR,EAAc,kDAA5D,8BAORU,OAAO,GACPC,SAAS,GACTC,GAAK,c,wFC5DAC,EAAeC,YAAO,SAAPA,CAAH,2gBAET,SAACC,GAAD,OAAOA,EAAEC,OAAS,eACvB,SAACD,GAAD,OAAQA,EAAEC,MAAQ,a,OCFhBC,EAAS,SAAC,GAAD,IACpBD,EADoB,EACpBA,MACAE,EAFoB,EAEpBA,WACAC,EAHoB,EAGpBA,SACAX,EAJoB,EAIpBA,QAJoB,OAMpB,cAACK,EAAD,CAAcG,MAAOA,EAAOE,WAAYA,EAAYV,QAASA,EAA7D,SACGW","file":"static/js/5.e48b4119.chunk.js","sourcesContent":["import { Button } from \"../../common/Button\";\r\nimport { lazy } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Slide, Zoom } from \"react-awesome-reveal\";\r\nimport {  ValidationTypeProps } from \"../../components/Form/types\";\r\nimport Input from \"../../common/Input\";\r\nimport {  FormGroup, Span } from \"../../components/Form/styles\";\r\nimport {AbiItem} from 'web3-utils';\r\nimport  { useEffect, useState } from 'react';\r\nimport { useForm } from \"../../common/utils/useForm\";\r\nimport CryptoJS from 'crypto-js';\r\nimport validate from \"../../common/utils/validationRules\";\r\nimport contractJson from \"../../SmartContract.json\";\r\nimport BlockUi from 'react-block-ui';\r\nimport Web3 from \"web3\";\r\nimport Web3Modal, { PROVIDER_CONTAINER_CLASSNAME } from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport styled from \"styled-components\";\r\nimport Links from \"../../components/Links\";\r\n\r\nrequire('dotenv').config();\r\nconst Form = lazy(() => import(\"../../components/Form\"));\r\nconst MiddleBlock = lazy(() => import(\"../../components/MiddleBlock\"));\r\nconst Container = lazy(() => import(\"../../common/Container\"));\r\nconst ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\r\nconst ContentBlock = lazy(() => import(\"../../components/ContentBlock\"));\r\nconst saleTime =  process.env.REACT_APP_SALE_TIME? parseInt(process.env.REACT_APP_SALE_TIME):0\r\nconst enableCountdown =  process.env.REACT_APP_COUNTDOWN? parseInt(process.env.REACT_APP_COUNTDOWN):false\r\nconst contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS? process.env.REACT_APP_CONTRACT_ADDRESS: \"\"\r\nconst mintPrice: number = process.env.REACT_APP_MIN_PRICE? parseFloat(process.env.REACT_APP_MIN_PRICE):0.05\r\ndeclare let window: any;\r\n\r\nconst LinkPage = () => {\r\n  const openNewWindow = (url:String)=>\r\n  {\r\n   window.open(url, \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      \r\n     <Links></Links>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LinkPage;\r\n","import { Button } from \"../../common/Button\";\r\nimport { lazy } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Slide, Zoom } from \"react-awesome-reveal\";\r\nimport {  ValidationTypeProps } from \"../Form/types\";\r\nimport Input from \"../../common/Input\";\r\nimport {  FormGroup, Span } from \"../Form/styles\";\r\nimport {AbiItem} from 'web3-utils';\r\nimport  { useEffect, useState } from 'react';\r\nimport { useForm } from \"../../common/utils/useForm\";\r\nimport CryptoJS from 'crypto-js';\r\nimport validate from \"../../common/utils/validationRules\";\r\nimport contractJson from \"../../SmartContract.json\";\r\nimport BlockUi from 'react-block-ui';\r\nimport Web3 from \"web3\";\r\nimport Web3Modal, { PROVIDER_CONTAINER_CLASSNAME } from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport styled from \"styled-components\";\r\n\r\nrequire('dotenv').config();\r\nconst Form = lazy(() => import(\"../Form\"));\r\nconst MiddleBlock = lazy(() => import(\"../MiddleBlock\"));\r\nconst Container = lazy(() => import(\"../../common/Container\"));\r\nconst ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\r\nconst ContentBlock = lazy(() => import(\"../ContentBlock\"));\r\nconst saleTime =  process.env.REACT_APP_SALE_TIME? parseInt(process.env.REACT_APP_SALE_TIME):0\r\nconst enableCountdown =  process.env.REACT_APP_COUNTDOWN? parseInt(process.env.REACT_APP_COUNTDOWN):false\r\nconst contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS? process.env.REACT_APP_CONTRACT_ADDRESS: \"\"\r\nconst mintPrice: number = process.env.REACT_APP_MIN_PRICE? parseFloat(process.env.REACT_APP_MIN_PRICE):0.05\r\ndeclare let window: any;\r\n\r\n\r\nconst Links = () => {\r\n  const openNewWindow = (url:String)=>\r\n  {\r\n   window.open(url, \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n    <MiddleBlock\r\n        title=\"Links\"\r\n        content={\r\n          (\r\n          <div>\r\n          <Row align=\"middle\">\r\n            <div>\r\n            <Button name=\"home-btn\"  onClick={() =>   openNewWindow(\"/links\")}>Official Site\r\n                </Button>\r\n                <Button name=\"discord-btn\" onClick={() =>  alert(\"Coming soon!\")}>Discord\r\n                </Button>\r\n                <Button name=\"twitter-btn\" onClick={() =>  openNewWindow(\"https://twitter.com/sws_werewolf\")}>Twitter\r\n                </Button>\r\n                <Button name=\"instagram-btn\"  onClick={() =>  openNewWindow(\"https://www.instagram.com/savage_werewolf_nft\")}>Instagram\r\n                </Button>\r\n            </div>\r\n            </Row>\r\n            </div>\r\n            ) \r\n        }\r\n        button=\"\"\r\n        scrollTo=\"\"\r\n        id = \"links\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<any>`\r\n\r\n  background: ${(p) => p.color || \"#00000000\"};\r\n  color: ${(p) => (p.color ? \"#ffffff\" : \"#ffffff\")};\r\n  font-size: 1.3rem;\r\n  font-weight: 300;\r\n  width: 200px;\r\n  border: 2px solid #ffffffaa;\r\n  border-radius: 100px;\r\n  padding: 5px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.4s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 2px solid #000000;\r\n    background-image: linear-gradient(260deg,  #751FC1 20%, #0D51BF  80%)\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({\r\n  color,\r\n  fixedWidth,\r\n  children,\r\n  onClick,\r\n}: ButtonProps) => (\r\n  <StyledButton color={color} fixedWidth={fixedWidth} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n"],"sourceRoot":""}