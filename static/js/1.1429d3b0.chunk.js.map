{"version":3,"sources":["common/Button/styles.ts","common/Button/index.tsx","pages/Home/index.tsx","components/Form/styles.ts","common/utils/useForm.tsx","common/utils/validationRules.ts","common/Input/styles.ts","common/Input/index.tsx"],"names":["StyledButton","styled","p","color","Button","fixedWidth","children","onClick","require","config","MiddleBlock","lazy","Container","ScrollToTop","ContentBlock","saleTime","process","REACT_APP_SALE_TIME","parseInt","contractAddress","mintPrice","parseFloat","featuredGallery","className","src","roadMap","ethereum","WalletLink","appName","appLogoUrl","darkMode","makeWeb3Provider","web3","Web3","Home","document","addEventListener","e","preventDefault","useState","account","setAccount","setBalance","availableToken","setAvailableToken","maxToken","setMaxToken","blocking","setBlocking","timerStarted","setTimerStarted","Date","getTime","currentTime","setCurrentTime","updateTime","useEffect","console","log","setInterval","loadContractInfo","contractJson","abi","eth","getAccounts","then","accounts","length","contractAbi","a","contract","Contract","methods","balanceOf","call","tokenOwn","availableToMint","tokenLeft","getMaxToken","undefined","loadUserInfo","connectWallet","send","defaultAccount","catch","error","mintToken","qty","payableAmount","toString","mintNFT","from","value","result","JSON","stringify","alert","err","message","redeemVoucher","voucherCode","voucherJson","CryptoJS","AES","decrypt","enc","Utf8","voucher","parse","minPrice","redeem","onMint","event","handleSubmit","useForm","validate","values","errors","handleChange","ValidationType","type","ErrorMessage","erros","mintComponent","autoComplete","onSubmit","justify","align","lg","md","sm","xs","direction","name","placeholder","onChange","Progressbar","progress","max","Childdiv","height","maxWidth","width","backgroundColor","borderRadius","textAlign","text","style","padding","fontWeight","getTimer","secondsLeft","seconds","mins","hours","days","Math","floor","tag","title","bold","content","button","icon","id","scrollTo","section","ContactContainer","FormGroup","Span","ButtonContainer","setValues","setErrors","shouldSubmit","Object","keys","notification","description","persist","target","test","hasOwnProperty","promo","promoCode","maxRedeem","getAvailableVoucher","availableVoucher","StyledInput","withTranslation","t"],"mappings":"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","file":"static/js/1.1429d3b0.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<any>`\r\n\r\n  background: ${(p) => p.color || \"#00000000\"};\r\n  color: ${(p) => (p.color ? \"#ffffff\" : \"#ffffff\")};\r\n  font-size: 1.3rem;\r\n  font-weight: 300;\r\n  width: 200px;\r\n  border: 2px solid #ffffffaa;\r\n  border-radius: 100px;\r\n  padding: 5px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.4s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 2px solid #000000;\r\n    background-image: linear-gradient(260deg,  #751FC1 20%, #0D51BF  80%)\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({\r\n  color,\r\n  fixedWidth,\r\n  children,\r\n  onClick,\r\n}: ButtonProps) => (\r\n  <StyledButton color={color} fixedWidth={fixedWidth} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import { Button } from \"../../common/Button\";\r\nimport { lazy } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Slide, Zoom } from \"react-awesome-reveal\";\r\nimport {  ValidationTypeProps } from \"../../components/Form/types\";\r\nimport Input from \"../../common/Input\";\r\nimport Web3 from 'web3'\r\nimport {  FormGroup, Span } from \"../../components/Form/styles\";\r\nimport {AbiItem} from 'web3-utils';\r\nimport  { useEffect, useState } from 'react';\r\nimport { useForm } from \"../../common/utils/useForm\";\r\nimport CryptoJS from 'crypto-js';\r\nimport validate from \"../../common/utils/validationRules\";\r\nimport contractJson from \"../../SmartContract.json\";\r\nimport BlockUi from 'react-block-ui';\r\nimport WalletLink from 'walletlink'\r\n\r\nrequire('dotenv').config();\r\nconst Form = lazy(() => import(\"../../components/Form\"));\r\nconst MiddleBlock = lazy(() => import(\"../../components/MiddleBlock\"));\r\nconst Container = lazy(() => import(\"../../common/Container\"));\r\nconst ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\r\nconst ContentBlock = lazy(() => import(\"../../components/ContentBlock\"));\r\nconst saleTime =  process.env.REACT_APP_SALE_TIME? parseInt(process.env.REACT_APP_SALE_TIME):0\r\nconst contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS? process.env.REACT_APP_CONTRACT_ADDRESS: \"\"\r\nconst mintPrice: number = process.env.REACT_APP_MIN_PRICE? parseFloat(process.env.REACT_APP_MIN_PRICE):0.05\r\ndeclare let window: any;\r\n\r\n\r\nconst featuredGallery = (\r\n  <div className=\"slideshow\">\r\n  <div className=\"images\">\r\n      <img src=\"img/feature/1.jpg\"/>\r\n      <img src=\"img/feature/2.jpg\"/>\r\n      <img src=\"img/feature/3.jpg\"/>\r\n      <img src=\"img/feature/4.jpg\"/>\r\n      <img src=\"img/feature/5.jpg\"/>\r\n      <img src=\"img/feature/6.jpg\"/>\r\n      <img src=\"img/feature/7.jpg\"/>\r\n      <img src=\"img/feature/8.jpg\"/>\r\n      <img src=\"img/feature/9.jpg\"/>\r\n      <img src=\"img/feature/10.jpg\"/>\r\n      <img src=\"img/feature/11.jpg\"/>\r\n      <img src=\"img/feature/12.jpg\"/>\r\n      <img src=\"img/feature/13.jpg\"/>\r\n      <img src=\"img/feature/14.jpg\"/>\r\n      <img src=\"img/feature/15.jpg\"/>\r\n      <img src=\"img/feature/1.jpg\"/>\r\n      <img src=\"img/feature/2.jpg\"/>\r\n      <img src=\"img/feature/3.jpg\"/>\r\n      <img src=\"img/feature/4.jpg\"/>\r\n      <img src=\"img/feature/5.jpg\"/>\r\n      <img src=\"img/feature/6.jpg\"/>\r\n  </div>\r\n  </div>)\r\n  \r\n  const roadMap = \r\n    (\r\n  <div className=\"timeline\">\r\n    <div className=\"container left\">\r\n      <div className=\"content\">\r\n        <h5>0%\r\n        </h5>\r\n        <p>Birth of Savage Werewolves. The beginning of Savage Werewolf Society.</p>\r\n      </div>\r\n    </div>\r\n    <div className=\"container right\">\r\n      <div className=\"content\">\r\n        <h5>25%</h5>\r\n        <p>Unleash Savage Werewolves. Sell out the entire collection and open the gates. We will release all werewolves of which society shall embrace in all forms and color...</p>\r\n      </div>\r\n    </div>\r\n    <div className=\"container left\">\r\n      <div className=\"content\">\r\n        <h5>50%\r\n        </h5>\r\n        <p>Exclusive Perks. These are not just any Werewolf. Thus..they will have access to premium perk's such as clubs, exclusive mints & future incentives beyond this ecosystem.</p>\r\n      </div>\r\n    </div>\r\n    <div className=\"container right\">\r\n      <div className=\"content\">\r\n        <h5>75%</h5>\r\n        <p> Werewolf Metaverse! An exclusive Savage Werewolf Society game will be released with community prizes....</p>\r\n      </div>\r\n    </div>\r\n    <div className=\"container left\">\r\n      <div className=\"content\">\r\n        <h5>100%\r\n        </h5>\r\n        <p>      Merchandise! The Shopping Strip is now open.\r\n        Get decked out in an exclusive selection of Savage Werewolf merch.</p>\r\n      </div>\r\n    </div>\r\n   </div>\r\n      )\r\n  \r\n\r\ninterface ProgressbarProps {\r\n  progress :number ,max :number,height:number\r\n}\r\n\r\n  const walletLink = new WalletLink({\r\n    appName: \"Savage Werewolf Society\",\r\n    appLogoUrl: \"https://raw.githubusercontent.com/SavageWerewolf/app/main/public/img/icons/logo512.png\",\r\n    darkMode: true\r\n  })\r\n\r\n  const ethereum = walletLink.makeWeb3Provider(\r\n    \"https://rinkeby.infura.io/v3/bb7e7e6dd19b4835bdc347b3074797ba\", 1\r\n  )\r\n  const web3 = new Web3(ethereum as any)\r\n\r\nconst Home = () => {\r\n\t\r\n  document.addEventListener(\"contextmenu\", function(e){\r\n  \te.preventDefault();\r\n  }, false);\r\n  \r\n\r\n\r\n  // const web3 = new Web3(Web3.givenProvider)\r\n\r\n  const [account, setAccount] = useState(\"\");\r\n  const [balance, setBalance] = useState(0);\r\n  const [availableToken, setAvailableToken] = useState(0);\r\n  const [availableVoucher, setAvailableVoucher] = useState(0);\r\n  const [maxToken, setMaxToken] = useState(10000);\r\n  const [blocking, setBlocking] = useState(false);\r\n  const [timerStarted, setTimerStarted] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(new Date().getTime());\r\n\r\n  const updateTime = () => {\r\n    setCurrentTime(new Date().getTime())\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"time changed\")\r\n  }, [currentTime]);\r\n\r\n  \r\n  useEffect(() => {\r\n    if(!timerStarted){\r\n      setInterval(updateTime, 1000);\r\n      setTimerStarted(true);\r\n    }\r\n    loadContractInfo(contractJson.abi as AbiItem[], contractAddress);\r\n    web3.eth.getAccounts().then((accounts)=>{\r\n      if(accounts.length>0){\r\n        setAccount(accounts[0])\r\n      }\r\n    })\r\n  }, []);\r\n\r\n\r\n  const loadContractInfo = async (contractAbi: any, contractAddress: string) => {\r\n    console.log(\"loadContractInfo\")\r\n    const contract = new web3.eth.Contract(contractAbi, contractAddress)\r\n    const accounts = await web3.eth.getAccounts()\r\n    setAccount(accounts[0])\r\n    if(accounts.length>0){\r\n      const tokenOwn = await contract.methods.balanceOf(accounts[0]).call()\r\n      setBalance(tokenOwn)\r\n    }\r\n    const tokenLeft = await contract.methods.availableToMint().call()\r\n    console.log(tokenLeft)\r\n    setAvailableToken(tokenLeft)\r\n\r\n    // const voucherJson = CryptoJS.AES.decrypt(voucherCode, process.env.REACT_APP_ENCRYPTION_KEY?process.env.REACT_APP_ENCRYPTION_KEY:\"\" ).toString(CryptoJS.enc.Utf8)\r\n    // const voucher = JSON.parse(voucherJson)\r\n    // const voucherLeft = await contract.methods.getAvailableVoucher(voucher).call()\r\n    // setAvailableVoucher(voucherLeft)\r\n\r\n    const maxToken = await contract.methods.getMaxToken().call()\r\n    setMaxToken(maxToken)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const loadUserInfo = async (contractAbi: any, contractAddress: string) => {\r\n      if(account!== undefined && account!==\"\" ){\r\n        const contract = new web3.eth.Contract(contractAbi, contractAddress)\r\n        const tokenOwn = await contract.methods.balanceOf(account).call()\r\n        setBalance(tokenOwn)\r\n      }else{\r\n        const accounts = await web3.eth.getAccounts()\r\n        if(accounts.length>0){\r\n          const contract = new web3.eth.Contract(contractAbi, contractAddress)\r\n          const tokenOwn = await contract.methods.balanceOf(accounts[0]).call()\r\n          setBalance(tokenOwn)\r\n        }\r\n      }\r\n    }\r\n    loadUserInfo(contractJson.abi as AbiItem[], contractAddress);\r\n  }, [account]);\r\n\r\n\r\n  const connectWallet = async () => {\r\n  \r\n    ethereum.send('eth_requestAccounts').then((accounts: string[]) => {\r\n      console.log(`User's address is ${accounts[0]}`)\r\n    \r\n      // Optionally, have the default account set for web3.js\r\n      web3.eth.defaultAccount = accounts[0]\r\n    }).catch((error) =>{\r\n        console.log(`error is ${error}`);\r\n      })\r\n    \r\n\r\n    \r\n    // ethereum.enable().then((accounts: string[]) => {\r\n    //   console.log(`User's address is ${accounts[0]}`)\r\n    //   web3.eth.defaultAccount = accounts[0]\r\n    // }).catch((error) =>{\r\n    //   console.log(`error is ${error}`);\r\n    // })\r\n\r\n\r\n    // var metaMaskResponse = {connectedStatus: false, status: \"unknown\", address: []}\r\n    // if (window.ethereum) { //check if Metamask is installed\r\n    //       try {\r\n    //           const address = await window.ethereum.enable(); //connect Metamask\r\n    //           metaMaskResponse = {\r\n    //                   connectedStatus: true,\r\n    //                   status: \"Connect to Metamask Successully\",\r\n    //                   address: address\r\n    //               }\r\n    //       } catch (error) {\r\n    //         metaMaskResponse = {\r\n    //               connectedStatus: false,\r\n    //               status: \"🦊 Connect to Metamask using the button on the top right.\", \r\n    //               address: []\r\n    //           }\r\n    //       }\r\n    // } else {\r\n    //   metaMaskResponse = {\r\n    //           connectedStatus: false,\r\n    //           status: \"🦊 You must install Metamask into your browser: https://metamask.io/download.html\", \r\n    //           address: []\r\n    //       }\r\n    // } \r\n    \r\n    // if(metaMaskResponse.connectedStatus){\r\n    //   setAccount(metaMaskResponse.address[0])\r\n    // }else{\r\n    //   alert(metaMaskResponse.status)\r\n    // }\r\n  };\r\n\r\n  const mintToken = async (qty: number) => {\r\n    web3.eth.getAccounts().then((accounts)=>{\r\n      if(accounts.length>0){\r\n        setAccount(accounts[0])\r\n        console.log(\"mintToken called\")\r\n        const contract = new web3.eth.Contract(contractJson.abi as AbiItem[], contractAddress)\r\n        const payableAmount =  (qty* mintPrice * 10 **18).toString() \r\n        console.log(\"mintPrice: \"+mintPrice)\r\n        console.log(\"qty: \"+qty)\r\n        setBlocking(true);\r\n    \r\n        contract.methods.mintNFT(qty).send({from: account,value: payableAmount})\r\n        .then((result: any) => {\r\n          console.log(\"Success! Got result: \" + JSON.stringify(result));\r\n          loadContractInfo(contractJson.abi as AbiItem[], contractAddress);\r\n          alert(\"Transaction Completed\");\r\n          setBlocking(false);\r\n        }).catch((err: any) => {\r\n          console.log(\"Failed with error: \" + JSON.stringify(err));\r\n          alert(err.message);\r\n          setBlocking(false);\r\n        });\r\n      }else{\r\n        setAccount(\"\")\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  const redeemVoucher = async (qty:number, voucherCode: string)=>{\r\n    const contract = new web3.eth.Contract(contractJson.abi as AbiItem[], contractAddress)\r\n    const accounts:string[] = await web3.eth.getAccounts()\r\n    setAccount(accounts[0])\r\n    const voucherJson = CryptoJS.AES.decrypt(voucherCode,process.env.REACT_APP_ENCRYPTION_KEY?process.env.REACT_APP_ENCRYPTION_KEY: \"\" ).toString(CryptoJS.enc.Utf8)\r\n    const voucher = JSON.parse(voucherJson)\r\n    // console.log(voucher.minPrice)\r\n    const payableAmount =  (qty * voucher.minPrice).toString() \r\n    console.log(qty)\r\n    console.log(payableAmount)\r\n    contract.methods.redeem(accounts[0], voucher, qty).send({from: accounts[0],value: payableAmount})  \r\n    .then((result:any) => {\r\n      console.log(\"Success! Got result: \" + JSON.stringify(result));\r\n    }).catch((err:any) => {\r\n      console.log(\"Failed with error: \" + JSON.stringify(err));\r\n    });\r\n  }\r\n\r\n  const onMint = (event : any) =>{\r\n    if(availableToken==0){\r\n      event.preventDefault();\r\n    }else {\r\n      const contract = new web3.eth.Contract(contractJson.abi as AbiItem[], contractAddress)\r\n      handleSubmit(event, mintToken, redeemVoucher, contract)\r\n    }\r\n  }\r\n\r\n  const { values, errors, handleChange, handleSubmit } = useForm(\r\n    validate\r\n  ) as any;\r\n\r\n  const ValidationType = ({ type }: ValidationTypeProps) => {\r\n    const ErrorMessage = errors[type];\r\n    return (\r\n        <Span erros={errors[type]}>{ErrorMessage}</Span>\r\n    );\r\n  };\r\n\r\n\r\n  const mintComponent = () =>{\r\n    var mintComponent:any = \"\"\r\n    if (account !== undefined && account !== \"\"){\r\n      mintComponent = (\r\n        <div>\r\n       <FormGroup autoComplete=\"off\" onSubmit={onMint}>\r\n        {availableToken>0?\r\n        <p>   \r\n          Get a unqiue Werewolf at 0.05 ETH \r\n          \r\n          <div className=\"mint-form\">\r\n           <Row justify=\"space-between\" align=\"middle\">\r\n              <Col lg={12} md={11} sm={24} xs={24}>\r\n                <Slide direction=\"left\">\r\n                <Input\r\n                type=\"text\"\r\n                name=\"qty\"\r\n                placeholder=\"Enter quantity\"\r\n                value={values.qty}\r\n                onChange={handleChange}\r\n              ></Input>\r\n             \r\n                </Slide>\r\n              </Col>\r\n              <Col lg={12} md={12} sm={24} xs={24}>\r\n                <Slide direction=\"right\">\r\n                  <Button >Start Minting</Button> \r\n                </Slide>\r\n              </Col>\r\n            </Row> \r\n            </div>\r\n  \r\n            {process.env.REACT_APP_PROMO==\"true\"?( <div className=\"mint-form promo-container\">\r\n             <Slide direction=\"up\">\r\n            <Input\r\n              type=\"text\"\r\n              name=\"promo\"\r\n              placeholder=\"Enter promo\"\r\n              value={values.promo}\r\n              onChange={handleChange}\r\n            ></Input>\r\n            </Slide>\r\n            </div>):(<div className=\"mint-form promo-container\">\r\n            </div>)}\r\n            \r\n              <ValidationType type=\"qty\" />\r\n          </p>\r\n        : <Button>Sold Out</Button>}\r\n        <Row justify=\"space-between\" align=\"middle\">\r\n        </Row>\r\n       </FormGroup>\r\n       </div>\r\n      )\r\n    } else {\r\n      mintComponent = <Button name=\"submit\" onClick={() => connectWallet()}>Connect Wallet\r\n      </Button>\r\n    }\r\n    return mintComponent\r\n  }\r\n\r\n  \r\n  const Progressbar = ({progress, max, height}: ProgressbarProps) => {\r\n     \r\n    const Parentdiv = {\r\n        height: '10px',\r\n        maxWidth: '100%',\r\n        backgroundColor: '#ffffff66',\r\n        borderRadius: 100\r\n      }\r\n      \r\n      const Childdiv = {\r\n        height: '100%',\r\n        maxWidth: '100%',\r\n        width: `${progress*100/max}%`,\r\n        backgroundColor:'#ff000099',\r\n        borderRadius:40,\r\n        textAlign: \"right\" as const,\r\n      }\r\n      \r\n      const progresstext = {\r\n        padding: 10,\r\n        color: 'white',\r\n        fontWeight: 100\r\n      }\r\n      \r\n   const text =  `${availableToken}/${max}`\r\n\r\n    return (\r\n      <div>\r\n      <span style={progresstext}> {text} Left</span>\r\n      <div style={Parentdiv}>\r\n      <div style={Childdiv}>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst getTimer = () =>{\r\n  const secondsLeft = (saleTime-currentTime)/1000;\r\n  const seconds =(secondsLeft)%60;\r\n  const mins = ((secondsLeft - seconds)/60)%60;\r\n  const hours = ((secondsLeft - seconds -(mins*60))/(60*60))%24;\r\n  const days = ((secondsLeft - seconds -(mins*60)- (hours*60*60))/(60*60*24));\r\n  const saleCountdown = (\r\n    <div className=\"timer\">\r\n      <Row justify=\"space-between\" align=\"middle\">\r\n        <Col className=\"value-container\">\r\n          <p className=\"value\">{days} </p><p className=\"label\">Days</p>\r\n         </Col>\r\n        <Col className=\"value-container\">\r\n          <p className=\"value\">{hours}</p><p className=\"label\">Hours</p>\r\n        </Col>\r\n        <Col className=\"value-container\">\r\n          <p className=\"value\">{mins}</p><p className=\"label\">Minutes</p>\r\n        </Col>\r\n        <Col className=\"value-container\">\r\n          <p className=\"value\">{Math.floor(seconds)}</p><p className=\"label\">Seconds</p>\r\n         </Col>\r\n      </Row>\r\n  {/* days+\" Days \"+hours+\" Hours \"+mins+\" Mintues \"+ Math.floor(seconds)+\" Seconds\" */}\r\n  \r\n    </div>\r\n  )\r\n  return saleCountdown;\r\n}\r\n\r\nconst getMintNFTComponent= () => (\r\n  <div className=\"mint-container\">\r\n         <p>\r\n          <p>\r\n              Get your unique Savage Werewolf \r\n           </p>\r\n          <img src=\"img/place_holder_example.png\" width=\"200px\"/>\r\n          </p>\r\n          \r\n          {(saleTime>currentTime)? \r\n          (<div className=\"sale-timer\"> Presale starts in <br/>{getTimer()}</div>) \r\n           : \r\n           (<div className=\"mint-section\">\r\n            <p>\r\n            <Progressbar progress={availableToken} max={maxToken} height={30} />\r\n          </p>\r\n              {mintComponent()}\r\n            </div>\r\n            )}\r\n          \r\n  </div>\r\n)\r\n\r\n\r\n  return (\r\n    <Container>\r\n    <BlockUi tag=\"div\" blocking={blocking}>\r\n      <ScrollToTop />\r\n      <ContentBlock\r\n        type=\"right\"\r\n        title=\"Savage Werewolf Society\"\r\n        bold={true}\r\n        content=\"\"\r\n        button={[\r\n          {\r\n            \"title\": \"Featured\",\r\n            \"scrollTo\": \"featured\"\r\n          },\r\n          {\r\n            \"title\": \"Road Map\",\r\n            \"scrollTo\": \"roadmap\"\r\n          }\r\n        ]}\r\n        icon=\"logo.png\"\r\n        id=\"intro\"\r\n      />\r\n      <MiddleBlock\r\n        title=\"Featured\"\r\n        content={featuredGallery}\r\n        button=\"Mint\"\r\n        scrollTo=\"mint\"\r\n        id = \"featured\"\r\n      />\r\n\r\n      <ContentBlock\r\n        type=\"left\"\r\n        title= \"What is Savage Werewolf Society?\"\r\n        content= \"Savage Werewolf Society is a collection of 10,000 randomly generated, assembled from over hundreds of hand-drawn traits. All werewolves are unique and have their own characteristics and expressions.\"\r\n        section={[]}\r\n        icon=\"wolfpacks.png\"\r\n        id=\"about\"\r\n      />\r\n      \r\n      <MiddleBlock\r\n        title=\"Be part of our Society\"\r\n        content={getMintNFTComponent()}\r\n        button=\"\"\r\n        scrollTo=\"\"\r\n        id = \"mint\"\r\n      />\r\n      \r\n      <MiddleBlock\r\n        title=\"Road Map\"\r\n        content={\"\"}\r\n        button=\"\"\r\n        scrollTo=\"\"\r\n        id = \"roadmap\"\r\n      />\r\n\r\n      {roadMap}\r\n     </BlockUi>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactContainer = styled(\"div\")`\r\n  padding: 5rem 0;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 3rem 0;\r\n  }\r\n`;\r\n\r\nexport const FormGroup = styled(\"form\")`\r\n  width: 100%;\r\n  max-width: 520px;\r\n\r\n  @media only screen and (max-width: 1045px) {\r\n    max-width: 100%;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Span = styled(\"span\")<any>`\r\n  display: block;\r\n  font-weight: 600;\r\n  color: rgb(255, 130, 92);\r\n  height: 0.775rem;\r\n  padding: 0 0.675rem;\r\n`;\r\n\r\nexport const ButtonContainer = styled(\"div\")`\r\n  text-align: end;\r\n  position: relative;\r\n\r\n  @media only screen and (max-width: 414px) {\r\n    padding-top: 0.75rem;\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport axios from \"axios\";\r\nimport {validateProps} from \"../types\"\r\nimport CryptoJS from 'crypto-js';\r\nrequire('dotenv').config();\r\n\r\nexport const useForm = (validate: any) => {\r\n  const [values, setValues] = useState({qty:\"0\"} as validateProps);\r\n  const [errors, setErrors] = useState({});\r\n  const [shouldSubmit, setShouldSubmit] = useState(false);\r\n\r\n  const openNotificationWithIcon = () => {\r\n    notification[\"success\"]({\r\n      message: \"Success\",\r\n      description: \"Your message has been sent!\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>, mintToken: (qty: number) => Promise<void>,\r\n   redeemVoucher: (qty: number, voucherCode: string) => Promise<void>, contract: any) => {\r\n    console.log(\"handleSubmit called\")\r\n\r\n    let errors = {} as validateProps;\r\n\r\n    console.log(values)\r\n    if (!values.qty) {\r\n      errors.qty = \"Quantity entered is a valid number!\";\r\n      setErrors(errors);\r\n  \r\n    } else{\r\n      if (!/^\\d+$/.test(values.qty) || (parseInt(values.qty) == 0) ){\r\n        errors.qty = \"Quantity entered is a valid number!\";\r\n        setErrors(errors);\r\n    \r\n      } else{\r\n        if ((parseInt(values.qty) > 10) ){\r\n          errors.qty = \"Max mint per transaction is 10!\";\r\n          setErrors(errors);\r\n        } else{\r\n          const qty = parseInt(values.qty)\r\n\r\n          if(values.hasOwnProperty('promo') && (values.promo?values.promo:\"\").length>0){\r\n            const promoCode = values.promo? values.promo:\"\"\r\n            console.log(process.env.REACT_APP_ENCRYPTION_KEY)\r\n            console.log(promoCode)\r\n            const voucherJson = CryptoJS.AES.decrypt(promoCode,process.env.REACT_APP_ENCRYPTION_KEY?process.env.REACT_APP_ENCRYPTION_KEY: \"\" ).toString(CryptoJS.enc.Utf8)\r\n            try{\r\n              const voucher = JSON.parse(voucherJson)\r\n              console.log(voucherJson)\r\n              if(voucher.maxRedeem<qty){\r\n                errors.qty = \"Max promo redeem per transaction is \"+ voucher.maxRedeem+\"!\";\r\n                setErrors(errors); \r\n              }else{\r\n                const getAvailableVoucher = async(voucher:any)=>{\r\n                  const availableVoucher = await contract.methods.getAvailableVoucher(voucher).call()\r\n                  if(availableVoucher<qty){\r\n                    errors.qty = availableVoucher +\" redeemption left\";\r\n                    setErrors(errors);\r\n                  }else{\r\n                    redeemVoucher(qty, promoCode)\r\n                  }\r\n                }\r\n                getAvailableVoucher(voucher)\r\n              }\r\n            }catch(error){\r\n              errors.qty = \"OMG, fake promo code entered!\";\r\n              setErrors(errors);\r\n            }\r\n          }else{\r\n            mintToken(qty)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && shouldSubmit) {\r\n      setValues({qty:\"0\"});\r\n      openNotificationWithIcon();\r\n    }\r\n  }, [errors, shouldSubmit]);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n    setErrors((errors) => ({ ...errors, [event.target.name]: \"\" }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  };\r\n};\r\n","import { validateProps } from \"../../common/types\";\r\n\r\nexport default function validate(values: validateProps) {\r\n  let errors = {} as validateProps;\r\n\r\n  console.log(values)\r\n  if (!values.qty) {\r\n    errors.qty = \"Quantity entered is a valid number!\";\r\n\r\n  } else if (!/\\d/.test(values.qty) || (parseInt(values.qty) == 0) ){\r\n    errors.qty = \"Quantity entered is a valid number!\";\r\n\r\n  } else if ((parseInt(values.qty) > 10) ){\r\n    errors.qty = \"Max mint per transaction is 10!\";\r\n\r\n  } \r\n  \r\n  console.log(\"validate: \"+ errors)\r\n  return errors;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const StyledInput = styled(\"input\")`\r\n  font-size: 1rem;\r\n`;\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { Container, StyledInput } from \"./styles\";\r\nimport { Label } from \"../TextArea/styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst Input = ({ name, placeholder, onChange, t }: InputProps) => (\r\n  <Container>\r\n    {/* <Label htmlFor={name}>{t(name)}</Label> */}\r\n    <StyledInput\r\n      placeholder={t(placeholder)}\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n    />\r\n  </Container>\r\n);\r\n\r\nexport default withTranslation()(Input);\r\n"],"sourceRoot":""}