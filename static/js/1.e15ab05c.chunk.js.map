{"version":3,"sources":["common/Button/styles.ts","common/Button/index.tsx","components/Form/styles.ts","common/utils/useForm.tsx","pages/Home/index.tsx","common/utils/validationRules.ts","common/Input/styles.ts","common/Input/index.tsx"],"names":["StyledButton","styled","p","color","Button","fixedWidth","children","onClick","ContactContainer","FormGroup","Span","ButtonContainer","useForm","validate","useState","qty","values","setValues","errors","setErrors","shouldSubmit","useEffect","Object","keys","length","notification","message","description","handleChange","event","persist","target","name","value","handleSubmit","mintToken","console","log","validationResult","hasOwnProperty","preventDefault","require","config","MiddleBlock","lazy","Container","ScrollToTop","ContentBlock","saleTime","parseInt","process","contractAddress","mintPrice","parseFloat","Home","document","addEventListener","e","account","setAccount","balance","setBalance","availableToken","setAvailableToken","maxToken","setMaxToken","web3","Web3","window","ethereum","blocking","setBlocking","Date","getTime","currenTime","setCurrentTime","updateTime","setTimeout","loadContractInfo","contractJson","abi","eth","getAccounts","then","accounts","contractAbi","a","contract","Contract","methods","balanceOf","call","tokenOwn","availableToMint","tokenLeft","getMaxToken","undefined","loadUserInfo","connectWallet","metaMaskResponse","connectedStatus","status","address","enable","alert","payableAmount","toString","mintNFT","send","from","result","JSON","stringify","catch","err","ValidationType","type","ErrorMessage","direction","erros","mintComponent","autoComplete","onSubmit","justify","align","lg","md","sm","xs","placeholder","onChange","Progressbar","progress","max","Childdiv","height","maxWidth","width","backgroundColor","borderRadius","textAlign","text","style","padding","fontWeight","secondsLeft","seconds","mins","hours","days","saleCountdown","className","Math","floor","mintNFTComponent","src","featuredGallery","roadMap","tag","title","bold","content","button","icon","id","scrollTo","section","test","StyledInput","withTranslation","t"],"mappings":"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","file":"static/js/1.e15ab05c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<any>`\r\n\r\n  background: ${(p) => p.color || \"#00000000\"};\r\n  color: ${(p) => (p.color ? \"#ffffff\" : \"#ffffff\")};\r\n  font-size: 1.3rem;\r\n  font-weight: 300;\r\n  width: 200px;\r\n  border: 2px solid #ffffffaa;\r\n  border-radius: 100px;\r\n  padding: 5px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.4s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 2px solid #000000;\r\n    background-image: linear-gradient(260deg,  #751FC1 20%, #0D51BF  80%)\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({\r\n  color,\r\n  fixedWidth,\r\n  children,\r\n  onClick,\r\n}: ButtonProps) => (\r\n  <StyledButton color={color} fixedWidth={fixedWidth} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactContainer = styled(\"div\")`\r\n  padding: 5rem 0;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 3rem 0;\r\n  }\r\n`;\r\n\r\nexport const FormGroup = styled(\"form\")`\r\n  width: 100%;\r\n  max-width: 520px;\r\n\r\n  @media only screen and (max-width: 1045px) {\r\n    max-width: 100%;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Span = styled(\"span\")<any>`\r\n  display: block;\r\n  font-weight: 600;\r\n  color: rgb(255, 130, 92);\r\n  height: 0.775rem;\r\n  padding: 0 0.675rem;\r\n`;\r\n\r\nexport const ButtonContainer = styled(\"div\")`\r\n  text-align: end;\r\n  position: relative;\r\n\r\n  @media only screen and (max-width: 414px) {\r\n    padding-top: 0.75rem;\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nexport const useForm = (validate: any) => {\r\n  const [values, setValues] = useState({qty:0});\r\n  const [errors, setErrors] = useState({});\r\n  const [shouldSubmit, setShouldSubmit] = useState(false);\r\n\r\n  const openNotificationWithIcon = () => {\r\n    notification[\"success\"]({\r\n      message: \"Success\",\r\n      description: \"Your message has been sent!\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>, mintToken: (qty: number) => Promise<void>, qty: number) => {\r\n    console.log(\"handleSubmit called\")\r\n    const validationResult = validate(values)\r\n    setErrors(validationResult);\r\n    if(!validationResult.hasOwnProperty('qty')){\r\n      console.log(\"validation pass, calling mintToken\")\r\n      mintToken(values.qty)\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && shouldSubmit) {\r\n      setValues({qty:0});\r\n      openNotificationWithIcon();\r\n    }\r\n  }, [errors, shouldSubmit]);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n    setErrors((errors) => ({ ...errors, [event.target.name]: \"\" }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  };\r\n};\r\n","import { Button } from \"../../common/Button\";\r\nimport { lazy } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Slide, Zoom } from \"react-awesome-reveal\";\r\nimport {  ValidationTypeProps } from \"../../components/Form/types\";\r\nimport Input from \"../../common/Input\";\r\nimport Web3 from 'web3'\r\nimport {  FormGroup, Span } from \"../../components/Form/styles\";\r\nimport {AbiItem} from 'web3-utils';\r\nimport  { useEffect, useState } from 'react';\r\nimport { useForm } from \"../../common/utils/useForm\";\r\nimport CryptoJS from 'crypto-js';\r\nimport validate from \"../../common/utils/validationRules\";\r\nimport contractJson from \"../../SmartContract.json\";\r\nimport BlockUi from 'react-block-ui';\r\n\r\nrequire('dotenv').config();\r\nconst Form = lazy(() => import(\"../../components/Form\"));\r\nconst MiddleBlock = lazy(() => import(\"../../components/MiddleBlock\"));\r\nconst Container = lazy(() => import(\"../../common/Container\"));\r\nconst ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\r\nconst ContentBlock = lazy(() => import(\"../../components/ContentBlock\"));\r\nconst saleTime =  process.env.REACT_APP_SALE_TIME? parseInt(process.env.REACT_APP_SALE_TIME):0\r\nconst contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS? process.env.REACT_APP_CONTRACT_ADDRESS: \"\"\r\nconst mintPrice: number = process.env.REACT_APP_MIN_PRICE? parseFloat(process.env.REACT_APP_MIN_PRICE):0.05\r\ndeclare let window: any;\r\nconst Home = () => {\r\n\t\r\n  document.addEventListener(\"contextmenu\", function(e){\r\n  \te.preventDefault();\r\n  }, false);\r\n  \r\n  const [account, setAccount] = useState(\"\");\r\n  const [balance, setBalance] = useState(0);\r\n  const [availableToken, setAvailableToken] = useState(0);\r\n  const [availableVoucher, setAvailableVoucher] = useState(0);\r\n  const [maxToken, setMaxToken] = useState(10000);\r\n  const web3 = new Web3(window.ethereum)\r\n\r\n  const [blocking, setBlocking] = useState(false);\r\n  const [currenTime, setCurrentTime] = useState(new Date().getTime());\r\n\r\n  function updateTime() {\r\n    setCurrentTime(new Date().getTime());\r\n    setTimeout(updateTime, 1000);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    loadContractInfo(contractJson.abi as AbiItem[], contractAddress);\r\n\r\n    web3.eth.getAccounts().then((accounts)=>{\r\n      if(accounts.length>0){\r\n        setAccount(accounts[0])\r\n      }\r\n    })\r\n    updateTime();\r\n  }, []);\r\n\r\n\r\n  const loadContractInfo = async (contractAbi: any, contractAddress: string) => {\r\n    console.log(\"loadContractInfo\")\r\n    const contract = new web3.eth.Contract(contractAbi, contractAddress)\r\n    const accounts = await web3.eth.getAccounts()\r\n    setAccount(accounts[0])\r\n    if(accounts.length>0){\r\n      const tokenOwn = await contract.methods.balanceOf(accounts[0]).call()\r\n      setBalance(tokenOwn)\r\n    }\r\n    const tokenLeft = await contract.methods.availableToMint().call()\r\n    console.log(tokenLeft)\r\n    setAvailableToken(tokenLeft)\r\n\r\n    // const voucherJson = CryptoJS.AES.decrypt(voucherCode, process.env.REACT_APP_ENCRYPTION_KEY?process.env.REACT_APP_ENCRYPTION_KEY:\"\" ).toString(CryptoJS.enc.Utf8)\r\n    // const voucher = JSON.parse(voucherJson)\r\n    // const voucherLeft = await contract.methods.getAvailableVoucher(voucher).call()\r\n    // setAvailableVoucher(voucherLeft)\r\n\r\n    const maxToken = await contract.methods.getMaxToken().call()\r\n    setMaxToken(maxToken)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const loadUserInfo = async (contractAbi: any, contractAddress: string) => {\r\n      if(account!== undefined && account!==\"\" ){\r\n        const contract = new web3.eth.Contract(contractAbi, contractAddress)\r\n        const tokenOwn = await contract.methods.balanceOf(account).call()\r\n        setBalance(tokenOwn)\r\n      }else{\r\n        const accounts = await web3.eth.getAccounts()\r\n        if(accounts.length>0){\r\n          const contract = new web3.eth.Contract(contractAbi, contractAddress)\r\n          const tokenOwn = await contract.methods.balanceOf(accounts[0]).call()\r\n          setBalance(tokenOwn)\r\n        }\r\n      }\r\n    }\r\n    loadUserInfo(contractJson.abi as AbiItem[], contractAddress);\r\n  }, [account]);\r\n\r\n\r\n  const connectWallet = async () => {\r\n    var metaMaskResponse = {connectedStatus: false, status: \"unknown\", address: []}\r\n    if (window.ethereum) { //check if Metamask is installed\r\n          try {\r\n              const address = await window.ethereum.enable(); //connect Metamask\r\n              metaMaskResponse = {\r\n                      connectedStatus: true,\r\n                      status: \"Connect to Metamask Successully\",\r\n                      address: address\r\n                  }\r\n          } catch (error) {\r\n            metaMaskResponse = {\r\n                  connectedStatus: false,\r\n                  status: \"🦊 Connect to Metamask using the button on the top right.\", \r\n                  address: []\r\n              }\r\n          }\r\n    } else {\r\n      metaMaskResponse = {\r\n              connectedStatus: false,\r\n              status: \"🦊 You must install Metamask into your browser: https://metamask.io/download.html\", \r\n              address: []\r\n          }\r\n    } \r\n    \r\n    if(metaMaskResponse.connectedStatus){\r\n      setAccount(metaMaskResponse.address[0])\r\n    }else{\r\n      alert(metaMaskResponse.status)\r\n    }\r\n  };\r\n\r\n  const mintToken = async (qty: number) => {\r\n    web3.eth.getAccounts().then((accounts)=>{\r\n      if(accounts.length>0){\r\n        setAccount(accounts[0])\r\n        console.log(\"mintToken called\")\r\n        const contract = new web3.eth.Contract(contractJson.abi as AbiItem[], contractAddress)\r\n        const payableAmount =  (qty* mintPrice * 10 **18).toString() \r\n        console.log(\"mintPrice: \"+mintPrice)\r\n        console.log(\"qty: \"+qty)\r\n        setBlocking(true);\r\n    \r\n    \r\n        contract.methods.mintNFT(qty).send({from: account,value: payableAmount})\r\n        .then((result: any) => {\r\n          console.log(\"Success! Got result: \" + JSON.stringify(result));\r\n          loadContractInfo(contractJson.abi as AbiItem[], contractAddress);\r\n          alert(\"Transaction Completed\");\r\n          setBlocking(false);\r\n        }).catch((err: any) => {\r\n          console.log(\"Failed with error: \" + JSON.stringify(err));\r\n          alert(err.message);\r\n          setBlocking(false);\r\n        });\r\n      }else{\r\n        setAccount(\"\")\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  const redeemVoucher = async (qty:number, voucherCode: string)=>{\r\n    const contract = new web3.eth.Contract(contractJson.abi as AbiItem[], contractAddress)\r\n    const accounts:string[] = await web3.eth.getAccounts()\r\n    setAccount(accounts[0])\r\n    const voucherJson = CryptoJS.AES.decrypt(voucherCode,process.env.REACT_APP_ENCRYPTION_KEY?process.env.REACT_APP_ENCRYPTION_KEY: \"\" ).toString(CryptoJS.enc.Utf8)\r\n    const voucher = JSON.parse(voucherJson)\r\n    // console.log(voucher.minPrice)\r\n    const payableAmount =  (qty * voucher.minPrice).toString() \r\n    console.log(qty)\r\n    console.log(payableAmount)\r\n    contract.methods.redeem(accounts[0], voucher, qty).send({from: accounts[0],value: payableAmount})  \r\n    .then((result:any) => {\r\n      console.log(\"Success! Got result: \" + JSON.stringify(result));\r\n    }).catch((err:any) => {\r\n      console.log(\"Failed with error: \" + JSON.stringify(err));\r\n    });\r\n  }\r\n\r\n  var balanceLabel = \"\"\r\n  if (balance !== undefined){\r\n     balanceLabel = \"You own\" + balance + \" token(s)\"\r\n  }\r\n  const onMint = (event : any) =>{\r\n    if(availableToken==0){\r\n      event.preventDefault();\r\n    }else {\r\n      handleSubmit(event, mintToken, event.target.qty.value)\r\n    }\r\n  }\r\n\r\n  const { values, errors, handleChange, handleSubmit } = useForm(\r\n    validate\r\n  ) as any;\r\n\r\n  const ValidationType = ({ type }: ValidationTypeProps) => {\r\n    const ErrorMessage = errors[type];\r\n    return (\r\n      <Zoom direction=\"left\">\r\n        <Span erros={errors[type]}>{ErrorMessage}</Span>\r\n      </Zoom>\r\n    );\r\n  };\r\n\r\n\r\n var mintComponent:any = \"\"\r\n  if (account !== undefined && account !== \"\"){\r\n    mintComponent = (\r\n      <div>\r\n     <FormGroup autoComplete=\"off\" onSubmit={onMint}>\r\n      {availableToken>0?\r\n      <p>   \r\n        Get a unqiue Werewolf at 0.05 ETH \r\n         <Row justify=\"space-between\" align=\"middle\">\r\n            <Col lg={12} md={11} sm={24} xs={24}>\r\n              <Slide direction=\"left\">\r\n              <Input\r\n              type=\"text\"\r\n              name=\"qty\"\r\n              placeholder=\"Enter quantity\"\r\n              value={values.qty}\r\n              onChange={handleChange}\r\n            ></Input>\r\n              </Slide>\r\n            </Col>\r\n            <Col lg={12} md={12} sm={24} xs={24}>\r\n              <Slide direction=\"right\">\r\n                <Button >Start Minting</Button> \r\n              </Slide>\r\n            </Col>\r\n          </Row>\r\n        </p>\r\n      : <Button>Sold Out</Button>}\r\n      <Row justify=\"space-between\" align=\"middle\">\r\n      <ValidationType type=\"qty\" />\r\n      </Row>\r\n     </FormGroup>\r\n     </div>\r\n    )\r\n  } else {\r\n    mintComponent = <Button name=\"submit\" onClick={() => connectWallet()}>Connect Wallet\r\n    </Button>\r\n  }\r\n\r\n\r\n  interface ProgressbarProps {\r\n    progress :number ,max :number,height:number\r\n  }\r\n  const Progressbar = ({progress, max, height}: ProgressbarProps) => {\r\n     \r\n    const Parentdiv = {\r\n        height: '10px',\r\n        maxWidth: '100%',\r\n        backgroundColor: '#ffffff66',\r\n        borderRadius: 100\r\n      }\r\n      \r\n      const Childdiv = {\r\n        height: '100%',\r\n        maxWidth: '100%',\r\n        width: `${progress*100/max}%`,\r\n        backgroundColor:'#ff000099',\r\n        borderRadius:40,\r\n        textAlign: \"right\" as const,\r\n      }\r\n      \r\n      const progresstext = {\r\n        padding: 10,\r\n        color: 'white',\r\n        fontWeight: 100\r\n      }\r\n      \r\n   const text =  `${availableToken}/${max}`\r\n\r\n    return (\r\n      <div>\r\n      <span style={progresstext}> {text} Left</span>\r\n      <div style={Parentdiv}>\r\n      <div style={Childdiv}>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nconst secondsLeft = (saleTime-currenTime)/1000;\r\nconst seconds =(secondsLeft)%60;\r\nconst mins = ((secondsLeft - seconds)/60)%60;\r\nconst hours = ((secondsLeft - seconds -(mins*60))/(60*60))%24;\r\nconst days = ((secondsLeft - seconds -(mins*60)- (hours*60*60))/(60*60*24));\r\nconst saleCountdown = (\r\n  <div className=\"timer\">\r\n    <Row justify=\"space-between\" align=\"middle\">\r\n      <Col className=\"value-container\">\r\n        <p className=\"value\">{days} </p><p className=\"label\">Days</p>\r\n       </Col>\r\n      <Col className=\"value-container\">\r\n        <p className=\"value\">{hours}</p><p className=\"label\">Hours</p>\r\n      </Col>\r\n      <Col className=\"value-container\">\r\n        <p className=\"value\">{mins}</p><p className=\"label\">Minutes</p>\r\n      </Col>\r\n      <Col className=\"value-container\">\r\n        <p className=\"value\">{Math.floor(seconds)}</p><p className=\"label\">Seconds</p>\r\n       </Col>\r\n    </Row>\r\n{/* days+\" Days \"+hours+\" Hours \"+mins+\" Mintues \"+ Math.floor(seconds)+\" Seconds\" */}\r\n\r\n  </div>\r\n\r\n)\r\nconst mintNFTComponent = (\r\n  <div className=\"mint-container\">\r\n         <p>\r\n          <p>\r\n              Get your unique Savage Werewolf \r\n           </p>\r\n          <img src=\"img/place_holder_example.png\" width=\"200px\"/>\r\n          </p>\r\n          \r\n          {(saleTime>currenTime)? \r\n          (<div className=\"sale-timer\"> Presale starts in <br/>{saleCountdown}</div>) \r\n           : \r\n           (<div className=\"mint-section\">\r\n            <p>\r\n            <Progressbar progress={availableToken} max={maxToken} height={30} />\r\n          </p>\r\n          \r\n              {mintComponent}\r\n            </div>\r\n            )}\r\n          \r\n  </div>\r\n)\r\n\r\nconst featuredGallery = (\r\n<div className=\"slideshow\">\r\n<div className=\"images\">\r\n    <img src=\"img/feature/1.jpg\"/>\r\n    <img src=\"img/feature/2.jpg\"/>\r\n    <img src=\"img/feature/3.jpg\"/>\r\n    <img src=\"img/feature/4.jpg\"/>\r\n    <img src=\"img/feature/5.jpg\"/>\r\n    <img src=\"img/feature/6.jpg\"/>\r\n    <img src=\"img/feature/7.jpg\"/>\r\n    <img src=\"img/feature/8.jpg\"/>\r\n    <img src=\"img/feature/9.jpg\"/>\r\n    <img src=\"img/feature/10.jpg\"/>\r\n    <img src=\"img/feature/11.jpg\"/>\r\n    <img src=\"img/feature/12.jpg\"/>\r\n    <img src=\"img/feature/13.jpg\"/>\r\n    <img src=\"img/feature/14.jpg\"/>\r\n    <img src=\"img/feature/15.jpg\"/>\r\n    <img src=\"img/feature/1.jpg\"/>\r\n    <img src=\"img/feature/2.jpg\"/>\r\n    <img src=\"img/feature/3.jpg\"/>\r\n    <img src=\"img/feature/4.jpg\"/>\r\n    <img src=\"img/feature/5.jpg\"/>\r\n    <img src=\"img/feature/6.jpg\"/>\r\n</div>\r\n</div>)\r\n\r\nconst roadMap = \r\n  (\r\n<div className=\"timeline\">\r\n  <div className=\"container left\">\r\n    <div className=\"content\">\r\n      <h5>0%\r\n      </h5>\r\n      <p>Birth of Savage Werewolves. The beginning of Savage Werewolf Society.</p>\r\n    </div>\r\n  </div>\r\n  <div className=\"container right\">\r\n    <div className=\"content\">\r\n      <h5>25%</h5>\r\n      <p>Unleash Savage Werewolves. Sell out the entire collection and open the gates. We will release all werewolves of which society shall embrace in all forms and color...</p>\r\n    </div>\r\n  </div>\r\n  <div className=\"container left\">\r\n    <div className=\"content\">\r\n      <h5>50%\r\n      </h5>\r\n      <p>Exclusive Perks. These are not just any Werewolf. Thus..they will have access to premium perk's such as clubs, exclusive mints & future incentives beyond this ecosystem.</p>\r\n    </div>\r\n  </div>\r\n  <div className=\"container right\">\r\n    <div className=\"content\">\r\n      <h5>75%</h5>\r\n      <p> Werewolf Metaverse! An exclusive Savage Werewolf Society game will be released with community prizes....</p>\r\n    </div>\r\n  </div>\r\n  <div className=\"container left\">\r\n    <div className=\"content\">\r\n      <h5>100%\r\n      </h5>\r\n      <p>      Merchandise! The Shopping Strip is now open.\r\n      Get decked out in an exclusive selection of Savage Werewolf merch.</p>\r\n    </div>\r\n  </div>\r\n </div>\r\n    )\r\n\r\n\r\n  return (\r\n    <Container>\r\n    <BlockUi tag=\"div\" blocking={blocking}>\r\n      <ScrollToTop />\r\n      <ContentBlock\r\n        type=\"right\"\r\n        title=\"Savage Werewolf Society\"\r\n        bold={true}\r\n        content=\"\"\r\n        button={[\r\n          {\r\n            \"title\": \"Featured\",\r\n            \"scrollTo\": \"featured\"\r\n          },\r\n          {\r\n            \"title\": \"Road Map\",\r\n            \"scrollTo\": \"roadmap\"\r\n          }\r\n        ]}\r\n        icon=\"svg/logo.png\"\r\n        id=\"intro\"\r\n      />\r\n      <MiddleBlock\r\n        title=\"Featured\"\r\n        content={featuredGallery}\r\n        button=\"Mint\"\r\n        scrollTo=\"mint\"\r\n        id = \"featured\"\r\n      />\r\n\r\n      <ContentBlock\r\n        type=\"left\"\r\n        title= \"What is Savage Werewolf Society?\"\r\n        content= \"Savage Werewolf Society is a collection of 10,000 randomly generated, assembled from over hundreds of hand-drawn traits. All werewolves are unique and have their own characteristics and expressions.\"\r\n        section={[]}\r\n        icon=\"wolfpacks.png\"\r\n        id=\"about\"\r\n      />\r\n      \r\n      <MiddleBlock\r\n        title=\"Be part of our Society\"\r\n        content={mintNFTComponent}\r\n        button=\"\"\r\n        scrollTo=\"\"\r\n        id = \"mint\"\r\n      />\r\n      \r\n      <MiddleBlock\r\n        title=\"Road Map\"\r\n        content={\"\"}\r\n        button=\"\"\r\n        scrollTo=\"\"\r\n        id = \"roadmap\"\r\n      />\r\n\r\n      {roadMap}\r\n     </BlockUi>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { validateProps } from \"../../common/types\";\r\n\r\nexport default function validate(values: validateProps) {\r\n  let errors = {} as validateProps;\r\n\r\n  console.log(values)\r\n  if (!values.qty) {\r\n    errors.qty = \"How many do you want to mint?\";\r\n\r\n  } else if (!/\\d/.test(values.qty) || (parseInt(values.qty) == 0) ){\r\n    errors.qty = \"This is no a valid number!\";\r\n\r\n  } else if ((parseInt(values.qty) > 10) ){\r\n    errors.qty = \"Max mint per transaction is 10!\";\r\n\r\n  } \r\n  console.log(\"validate: \"+ errors)\r\n  return errors;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const StyledInput = styled(\"input\")`\r\n  font-size: 1rem;\r\n`;\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { Container, StyledInput } from \"./styles\";\r\nimport { Label } from \"../TextArea/styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst Input = ({ name, placeholder, onChange, t }: InputProps) => (\r\n  <Container>\r\n    {/* <Label htmlFor={name}>{t(name)}</Label> */}\r\n    <StyledInput\r\n      placeholder={t(placeholder)}\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n    />\r\n  </Container>\r\n);\r\n\r\nexport default withTranslation()(Input);\r\n"],"sourceRoot":""}